1. to validate the method, we should use ExecutableValidator executableValidator from validator
	the annotation for field not works for method, the annotations are same, but the position is different.

2. when validate method, we can use the @Valid to cascade to object validation.
method validation need the constrains on the method.
@Valid in method:
	setAddress(@NotNull(message="Address may not be null") @Valid Address address)

3. please note, the method validation not set the value, not really call the method.
the 'user1' is still null with setName: "Name1"

4. Spring Validation provides an integration with Hibernate Validator, it is automatic validation.
Note: Spring Validation is based on AOP and uses Spring AOP as the default implementation. 
Therefore, validation only works for methods, but not for constructors.

to use spring to validate method, use: 
MethodValidationPostProcessor + @Validated (on the bean level)

https://www.baeldung.com/javax-validation-method-constraints

5. If we are using Spring Boot, the container will register a MethodValidationPostProcessor bean for us as long as hibernate-validator is in the classpath.